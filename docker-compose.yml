networks:
  laravel:

services:

  start:
    build:
      context: ./.docker
      dockerfile: nginx.dockerfile
    volumes:
      - .:/var/www/html:delegated
    ports:
      - "${APP_PORT:-80}:80"
    environment:
      - APP_ENV=${APP_ENV:-local}
    networks:
      - laravel
    depends_on:
      - mysql
      - app
    restart: always

  app:
    build:
      context: ./.docker
      dockerfile: app.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    expose:
      - "9000"
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - redis
    networks:
      - laravel
    restart: always

  mysql:
    image: mariadb:10.6
    restart: always
    tty: true
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --appendonly yes --bind 0.0.0.0
    volumes:
      - ./data/redis/data:/data
    networks:
      - laravel

  composer:
    build:
      context: ./.docker
      dockerfile: app.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - app
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./.docker
      dockerfile: app.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel
